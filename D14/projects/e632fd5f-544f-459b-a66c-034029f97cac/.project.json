{
  "id": "e632fd5f-544f-459b-a66c-034029f97cac",
  "name": "Project Alpha",
  "description": "Test project Project Alpha",
  "language": "python",
  "createdAt": "2025-08-23T20:06:46.215Z",
  "updatedAt": "2025-08-23T20:06:57.690Z",
  "files": [
    {
      "name": "circle_area.py",
      "content": "import math\n\ndef circle_area(radius):\n    \"\"\"\n    Вычисляет площадь круга по заданному радиусу.\n\n    :param radius: Радиус круга (должен быть неотрицательным числом)\n    :return: Площадь круга\n    :raises ValueError: Если радиус отрицательный\n    \"\"\"\n    if radius < 0:\n        raise ValueError(\"Радиус не может быть отрицательным\")\n    return math.pi * (radius ** 2)",
      "type": "code",
      "path": "/Users/vladimir/s21_school/1_Job/AI Advent 2025/D14/projects/e632fd5f-544f-459b-a66c-034029f97cac/circle_area.py",
      "lastModified": "2025-08-23T20:06:57.689Z"
    },
    {
      "name": "test_circle_area.py",
      "content": "import unittest\nfrom circle_area import circle_area\n\nclass TestCircleArea(unittest.TestCase):\n    def test_circle_area_positive(self):\n        \"\"\"Тест на положительный радиус\"\"\"\n        self.assertAlmostEqual(circle_area(1), 3.14159, places=5)\n        self.assertAlmostEqual(circle_area(0), 0, places=5)\n        self.assertAlmostEqual(circle_area(2), 12.56637, places=5)\n    \n    def test_circle_area_negative(self):\n        \"\"\"Тест на отрицательный радиус\"\"\"\n        with self.assertRaises(ValueError):\n            circle_area(-1)\n\nif __name__ == '__main__':\n    unittest.main()",
      "type": "test",
      "path": "/Users/vladimir/s21_school/1_Job/AI Advent 2025/D14/projects/e632fd5f-544f-459b-a66c-034029f97cac/test_circle_area.py",
      "lastModified": "2025-08-23T20:06:57.690Z"
    }
  ]
}