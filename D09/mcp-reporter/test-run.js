import { getPushStats, getHourlyPushStats, sendTelegramMessage, sendPushStatsToTelegram, cleanup } from './src/mcpOrchestrator.js';

async function testRun() {
  console.log("üöÄ D09 - –¢–µ—Å—Ç–æ–≤—ã–π –∑–∞–ø—É—Å–∫ MCP Reporter\n");

  try {
    const username = 'exegguto';
    
    console.log("üìä –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø—É—à–µ–π GitHub...");
    const pushStats = await getPushStats(username, 1);
    console.log("‚úÖ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ–ª—É—á–µ–Ω–∞:", pushStats ? "–ï—Å—Ç—å –¥–∞–Ω–Ω—ã–µ" : "–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö");
    
    console.log("\nüì± –û—Ç–ø—Ä–∞–≤–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Telegram...");
    const messageResult = await sendTelegramMessage("üß™ D09 - –¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç MCP Reporter\n\n‚è∞ –í—Ä–µ–º—è: " + new Date().toLocaleString('ru-RU'));
    console.log("‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ:", messageResult ? "–£—Å–ø–µ—à–Ω–æ" : "–û—à–∏–±–∫–∞");
    
    console.log("\nüìä –û—Ç–ø—Ä–∞–≤–∫–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø—É—à–µ–π –≤ Telegram...");
    const statsResult = await sendPushStatsToTelegram(username, 1);
    console.log("‚úÖ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞:", statsResult ? "–£—Å–ø–µ—à–Ω–æ" : "–û—à–∏–±–∫–∞");
    
    console.log("\n‚è∞ –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ—á–∞—Å–æ–≤–æ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏...");
    const hourlyResult = await getHourlyPushStats(username);
    console.log("‚úÖ –ü–æ—á–∞—Å–æ–≤–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:", hourlyResult ? "–ü–æ–ª—É—á–µ–Ω–∞" : "–ù–µ –ø–æ–ª—É—á–µ–Ω–∞");
    
    console.log("\nüéâ –í—Å–µ —Ç–µ—Å—Ç—ã –∑–∞–≤–µ—Ä—à–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!");
    
  } catch (error) {
    console.error("‚ùå –û—à–∏–±–∫–∞:", error.message);
  } finally {
    cleanup();
    console.log("\nüèÅ –°–∏—Å—Ç–µ–º–∞ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞");
  }
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
process.on('uncaughtException', (error) => {
  console.error('–ù–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞:', error);
  process.exit(1);
});

testRun();
