import { getPushStats, getHourlyPushStats, sendTelegramMessage, sendPushStatsToTelegram, cleanup } from './src/mcpOrchestrator.js';

async function testOrchestrator() {
  console.log("üöÄ –¢–µ—Å—Ç MCP –æ—Ä–∫–µ—Å—Ç—Ä–∞—Ç–æ—Ä–∞\n");

  try {
    const username = process.env.GITHUB_USER || 'exegguto';
    
    // –¢–µ—Å—Ç 1: –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø—É—à–µ–π
    console.log("üîç –¢–µ—Å—Ç 1: –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø—É—à–µ–π");
    const pushStats = await getPushStats(username, 1);
    console.log("üìä –†–µ–∑—É–ª—å—Ç–∞—Ç:", pushStats ? "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ–ª—É—á–µ–Ω–∞" : "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞");
    console.log("\n" + "=".repeat(60) + "\n");

    // –¢–µ—Å—Ç 2: –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Telegram
    console.log("üîç –¢–µ—Å—Ç 2: –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Telegram");
    const messageResult = await sendTelegramMessage("üß™ –¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç MCP –æ—Ä–∫–µ—Å—Ç—Ä–∞—Ç–æ—Ä–∞\n\n‚è∞ –í—Ä–µ–º—è: " + new Date().toLocaleString('ru-RU'));
    console.log("üìä –†–µ–∑—É–ª—å—Ç–∞—Ç:", messageResult ? "–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ" : "–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏");
    console.log("\n" + "=".repeat(60) + "\n");

    // –¢–µ—Å—Ç 3: –û—Ç–ø—Ä–∞–≤–∫–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø—É—à–µ–π –≤ Telegram
    console.log("üîç –¢–µ—Å—Ç 3: –û—Ç–ø—Ä–∞–≤–∫–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø—É—à–µ–π –≤ Telegram");
    const statsResult = await sendPushStatsToTelegram(username, 1);
    console.log("üìä –†–µ–∑—É–ª—å—Ç–∞—Ç:", statsResult ? "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞" : "–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏");
    console.log("\n" + "=".repeat(60) + "\n");

    // –¢–µ—Å—Ç 4: –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ—á–∞—Å–æ–≤–æ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
    console.log("üîç –¢–µ—Å—Ç 4: –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ—á–∞—Å–æ–≤–æ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏");
    const hourlyResult = await getHourlyPushStats(username);
    console.log("üìä –†–µ–∑—É–ª—å—Ç–∞—Ç:", hourlyResult ? "–ü–æ—á–∞—Å–æ–≤–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ–ª—É—á–µ–Ω–∞" : "–ü–æ—á–∞—Å–æ–≤–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞");

  } catch (error) {
    console.error("‚ùå –û—à–∏–±–∫–∞:", error.message);
  } finally {
    cleanup();
    console.log("\nüèÅ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω");
  }
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
process.on('uncaughtException', (error) => {
  console.error('–ù–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞:', error);
  process.exit(1);
});

testOrchestrator();
